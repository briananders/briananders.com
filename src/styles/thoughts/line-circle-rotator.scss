@import "system/utilities";

@function css-function( $function, $values... ) {
	@return
		$function
		+ unquote( '(' )
		+ $values
		+ unquote( ')' )
	;
}

@function css-min( $values... ) {
	@return css-function( min, $values );
}

@function css-max( $values... ) {
	@return css-function( max, $values );
}

$circle-diameter: css-min(0.75vh, 0.75vw);

@keyframes back-and-forth {
  0% {
    left: 0%;
  }
  50% {
    left: calc(100% - #{$circle-diameter});
  }
  100% {
    left: 0%;
  }
}

select {
  display: block;
  margin: auto;
  @include paragraph-margin;
}

.circle {
  height: css-min($grid--copy-max-width, 100vw);
  width: css-min($grid--copy-max-width, 100vw);
  margin: auto;
  position: relative;

  line {
    background: $color--grey-100;
    @include dark-mode {
      background: $color--grey-800;
    }
    z-index: 0;
  }

  span {
    z-index: 2;
  }

  span, line {
    overflow: hidden;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    transform-origin: center center;
    height: $circle-diameter;
    border-radius: $circle-diameter / 2;
  }

  span {
    &:after {
      content: '';
      width: $circle-diameter;
      height: $circle-diameter;
      display: block;
      border-radius: 100%;
      background-color: red;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: 0%;
      z-index: 2;

      animation-name: back-and-forth;
      animation-iteration-count: infinite;
      animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);
      animation-duration: 4000ms;
      animation-delay: var(--animation-delay, 0ms);
    }
  }
}
