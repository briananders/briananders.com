name: Convert Images to WebP and AVIF

on:
  push:
    branches: ['*']
  pull_request:
    types: [opened, synchronize]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  convert-images:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install image conversion tools
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick webp libavif-tools
          # Verify tools are installed
          cwebp -version
          avifenc --version

      - name: Run image conversion
        run: npm run convert:images

      - name: Check for changes
        id: check-changes
        run: |
          if [ -f conversion-results.json ]; then
            CHANGES=$(cat conversion-results.json | jq -r '.summary.newFiles')
            echo "changes=$CHANGES" >> $GITHUB_OUTPUT
            echo "Found $CHANGES converted files"
            
            # Also check git status for actual changes
            git add .
            if git diff --staged --quiet; then
              echo "no-git-changes=true" >> $GITHUB_OUTPUT
              echo "No git changes detected"
            else
              echo "no-git-changes=false" >> $GITHUB_OUTPUT
              echo "Git changes detected"
            fi
          else
            echo "changes=0" >> $GITHUB_OUTPUT
            echo "no-git-changes=true" >> $GITHUB_OUTPUT
            echo "No conversion results found"
          fi

      - name: Create Pull Request
        if: steps.check-changes.outputs.changes > 0 && steps.check-changes.outputs.no-git-changes == 'false'
        run: |
          # Set up git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Create a new branch for the converted images
          BRANCH_NAME="convert-images-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"

          # Add all converted files
          git add .

          # Get conversion summary
          CONVERTED_COUNT=$(cat conversion-results.json | jq -r '.summary.convertedImages')
          NEW_FILES_COUNT=$(cat conversion-results.json | jq -r '.summary.newFiles')

          # Commit the changes
          git commit -m "Convert images to WebP and AVIF formats

          - Converted $CONVERTED_COUNT image files
          - Generated $NEW_FILES_COUNT new optimized files
          - Added WebP and AVIF versions for better performance and compatibility

          This PR was automatically created by the image conversion workflow."

          # Push the branch
          git push origin "$BRANCH_NAME"

          # Create detailed PR body
          cat > pr-body.md << 'EOF'
          ## 🖼️ Image Conversion Summary

          This PR automatically converts image files to modern formats for better performance and compatibility.

          ### 📊 Statistics:
          - **Images processed**: $CONVERTED_COUNT
          - **New files created**: $NEW_FILES_COUNT
          - **Formats added**: WebP and AVIF

          ### 📁 Converted Files:
          EOF

          # Add file details to PR body
          cat conversion-results.json | jq -r '.convertedFiles[] | "- **\(.original)**: \(if .webp then "✅ WebP" else "❌ WebP" end) \(if .avif then "✅ AVIF" else "❌ AVIF" end)"' >> pr-body.md

          cat >> pr-body.md << 'EOF'

          ### 🚀 Benefits:
          - **WebP**: ~25-35% smaller file sizes compared to JPEG/PNG
          - **AVIF**: ~50% smaller file sizes compared to JPEG/PNG
          - Better compression with maintained quality
          - Modern browser support
          - Improved page load times

          ### 🔧 Next Steps:
          - [ ] Review the converted files
          - [ ] Test the website with new image formats
          - [ ] Consider updating HTML templates to use the new formats with fallbacks
          - [ ] Update build process to include new formats

          ### 📝 Technical Details:
          - WebP conversion uses quality setting of 80
          - AVIF conversion uses speed setting of 4 for balance between speed and compression
          - Only files matching conversion criteria were processed
          - Original files are preserved

          ---
          *This PR was automatically generated by the image conversion workflow.*
          EOF

          # Create pull request
          gh pr create \
            --title "🖼️ Convert images to WebP and AVIF formats" \
            --body-file pr-body.md \
            --head "$BRANCH_NAME" \
            --base "${{ github.base_ref || github.ref_name }}"

      - name: No changes detected
        if: steps.check-changes.outputs.changes == 0 || steps.check-changes.outputs.no-git-changes == 'true'
        run: |
          echo "No new image conversions needed or no changes detected"
          if [ -f conversion-results.json ]; then
            echo "Conversion results:"
            echo "Total images found: $(cat conversion-results.json | grep -o '"totalImages":[0-9]*' | cut -d: -f2)"
            echo "Images with new conversions: $(cat conversion-results.json | grep -o '"convertedImages":[0-9]*' | cut -d: -f2)"
            echo "New files created: $(cat conversion-results.json | grep -o '"newFiles":[0-9]*' | cut -d: -f2)"
          fi

      - name: Upload conversion results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: conversion-results
          path: |
            conversion-results.json